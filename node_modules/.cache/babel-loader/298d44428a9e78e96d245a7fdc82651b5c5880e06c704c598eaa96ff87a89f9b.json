{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { ADD_RECIPE, SEARCH_RECIPE, SET_ERROR, SET_LOADING, SET_RECIPE } from './Constants';\nimport { nanoid } from 'nanoid';\nimport { addRecipe, recipeError, recipeSuccess } from './Action';\nconst key = \"&app_id=a5de3521&app_key=28f8a20bd893e2740e68d4bbb349b977&from=0&to=50\";\n//const rec=\"pizza\"\nconst recipeid = () => nanoid();\nconsole.log(\"recipe\", recipeid);\nfunction* getRecipe() {\n  try {\n    yield put({\n      type: SET_LOADING,\n      loading: true\n    });\n    let data = yield fetch(`https://api.edamam.com/search?q=chicken${key}`);\n    // let data = yield fetch(\"http://localhost:4000/\")\n    data = yield data.json();\n    data = data.hits.map(recipe => ({\n      id: recipeid(),\n      ...recipe.recipe\n    }));\n    console.warn(\"saga\", data);\n    yield put(recipeSuccess(data));\n  } catch (error) {\n    yield put(recipeError(error.message));\n  }\n}\nfunction* searchRecipe(data) {\n  try {\n    yield put({\n      type: SET_LOADING,\n      loading: true\n    });\n    let result = yield fetch(`https://api.edamam.com/search?q=${data.query}${key}`);\n    console.log(\"querry\", data.query);\n    console.log(\"querry\", data);\n    result = yield result.json();\n    const recipeId = result.hits.map(recipe => ({\n      id: recipeid(),\n      ...recipe.recipe\n    }));\n    console.warn(\"sagarecipe\", result);\n    yield put(recipeSuccess(recipeId));\n  } catch (error) {\n    yield put(recipeError(error.message));\n  }\n}\nfunction* recipeSaga() {\n  yield takeEvery(ADD_RECIPE, getRecipe);\n  yield takeEvery(SEARCH_RECIPE, searchRecipe);\n}\nexport default recipeSaga;","map":{"version":3,"names":["put","takeEvery","ADD_RECIPE","SEARCH_RECIPE","SET_ERROR","SET_LOADING","SET_RECIPE","nanoid","addRecipe","recipeError","recipeSuccess","key","recipeid","console","log","getRecipe","type","loading","data","fetch","json","hits","map","recipe","id","warn","error","message","searchRecipe","result","query","recipeId","recipeSaga"],"sources":["/home/rifluxyss/Documents/deva/REDUX-TASK-SAGA/recipe-finished/src/Redux/recipesaga.js"],"sourcesContent":["import { put, takeEvery } from 'redux-saga/effects'\nimport { ADD_RECIPE, SEARCH_RECIPE, SET_ERROR, SET_LOADING, SET_RECIPE } from './Constants'\nimport { nanoid } from 'nanoid'\nimport { addRecipe, recipeError, recipeSuccess } from './Action';\n\nconst key =\"&app_id=a5de3521&app_key=28f8a20bd893e2740e68d4bbb349b977&from=0&to=50\"\n//const rec=\"pizza\"\nconst recipeid =()=>nanoid();\nconsole.log(\"recipe\",recipeid)\nfunction* getRecipe(){\n    try{\n        yield put({type:SET_LOADING,loading:true})\n         let data = yield fetch(`https://api.edamam.com/search?q=chicken${key}`)\n       // let data = yield fetch(\"http://localhost:4000/\")\n        data = yield data.json()\n         data = data.hits.map(recipe => ({\n            id: recipeid(),\n            ...recipe.recipe\n        }));\n        console.warn(\"saga\",data)\n        yield put(recipeSuccess(data))\n    \n    }\ncatch(error){\n    yield put(recipeError(error.message))\n}\n}\n    \nfunction* searchRecipe(data){\n    try{\n    yield put({type:SET_LOADING,loading:true})\n    let result = yield fetch(`https://api.edamam.com/search?q=${data.query}${key}`)\n    console.log(\"querry\",data.query)\n    console.log(\"querry\",data)\n    result = yield result.json()\n    const recipeId = result.hits.map(recipe => ({\n        id: recipeid(),\n        ...recipe.recipe\n    }));\n    console.warn(\"sagarecipe\",result)\n    yield put(recipeSuccess(recipeId))\n}\ncatch(error){\n    yield put(recipeError(error.message))\n}\n}\n\nfunction* recipeSaga(){\n    yield takeEvery(ADD_RECIPE,getRecipe)\n    yield takeEvery(SEARCH_RECIPE,searchRecipe)\n}\n\nexport default recipeSaga"],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACnD,SAASC,UAAU,EAAEC,aAAa,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,aAAa;AAC3F,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,SAAS,EAAEC,WAAW,EAAEC,aAAa,QAAQ,UAAU;AAEhE,MAAMC,GAAG,GAAE,wEAAwE;AACnF;AACA,MAAMC,QAAQ,GAAEA,CAAA,KAAIL,MAAM,CAAC,CAAC;AAC5BM,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACF,QAAQ,CAAC;AAC9B,UAAUG,SAASA,CAAA,EAAE;EACjB,IAAG;IACC,MAAMf,GAAG,CAAC;MAACgB,IAAI,EAACX,WAAW;MAACY,OAAO,EAAC;IAAI,CAAC,CAAC;IACzC,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAE,0CAAyCR,GAAI,EAAC,CAAC;IACzE;IACCO,IAAI,GAAG,MAAMA,IAAI,CAACE,IAAI,CAAC,CAAC;IACvBF,IAAI,GAAGA,IAAI,CAACG,IAAI,CAACC,GAAG,CAACC,MAAM,KAAK;MAC7BC,EAAE,EAAEZ,QAAQ,CAAC,CAAC;MACd,GAAGW,MAAM,CAACA;IACd,CAAC,CAAC,CAAC;IACHV,OAAO,CAACY,IAAI,CAAC,MAAM,EAACP,IAAI,CAAC;IACzB,MAAMlB,GAAG,CAACU,aAAa,CAACQ,IAAI,CAAC,CAAC;EAElC,CAAC,CACL,OAAMQ,KAAK,EAAC;IACR,MAAM1B,GAAG,CAACS,WAAW,CAACiB,KAAK,CAACC,OAAO,CAAC,CAAC;EACzC;AACA;AAEA,UAAUC,YAAYA,CAACV,IAAI,EAAC;EACxB,IAAG;IACH,MAAMlB,GAAG,CAAC;MAACgB,IAAI,EAACX,WAAW;MAACY,OAAO,EAAC;IAAI,CAAC,CAAC;IAC1C,IAAIY,MAAM,GAAG,MAAMV,KAAK,CAAE,mCAAkCD,IAAI,CAACY,KAAM,GAAEnB,GAAI,EAAC,CAAC;IAC/EE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACI,IAAI,CAACY,KAAK,CAAC;IAChCjB,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACI,IAAI,CAAC;IAC1BW,MAAM,GAAG,MAAMA,MAAM,CAACT,IAAI,CAAC,CAAC;IAC5B,MAAMW,QAAQ,GAAGF,MAAM,CAACR,IAAI,CAACC,GAAG,CAACC,MAAM,KAAK;MACxCC,EAAE,EAAEZ,QAAQ,CAAC,CAAC;MACd,GAAGW,MAAM,CAACA;IACd,CAAC,CAAC,CAAC;IACHV,OAAO,CAACY,IAAI,CAAC,YAAY,EAACI,MAAM,CAAC;IACjC,MAAM7B,GAAG,CAACU,aAAa,CAACqB,QAAQ,CAAC,CAAC;EACtC,CAAC,CACD,OAAML,KAAK,EAAC;IACR,MAAM1B,GAAG,CAACS,WAAW,CAACiB,KAAK,CAACC,OAAO,CAAC,CAAC;EACzC;AACA;AAEA,UAAUK,UAAUA,CAAA,EAAE;EAClB,MAAM/B,SAAS,CAACC,UAAU,EAACa,SAAS,CAAC;EACrC,MAAMd,SAAS,CAACE,aAAa,EAACyB,YAAY,CAAC;AAC/C;AAEA,eAAeI,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}