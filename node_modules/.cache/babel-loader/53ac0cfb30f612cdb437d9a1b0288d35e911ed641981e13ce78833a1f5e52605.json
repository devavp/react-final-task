{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { ADD_RECIPE, SEARCH_RECIPE } from './Constants';\nimport { nanoid } from 'nanoid';\nimport { recipeError, recipeSuccess, searchrecipeError, searchrecipeSuccess } from './Action';\nconst key = \"&app_id=a5de3521&app_key=28f8a20bd893e2740e68d4bbb349b977&from=0&to=50\";\n//const rec=\"pizza\"\nconst recipeid = () => nanoid();\nconsole.log(\"recipe\", recipeid);\nfunction* getRecipe() {\n  try {\n    //yield put({ type: SET_LOADING, loading: true })\n    let data = yield fetch(`https://api.edamam.com/search?q=chicken${key}`);\n    // let data = yield fetch(\"http://localhost:4000/\")\n    data = yield data.json();\n    data = data.hits.map(recipe => ({\n      id: recipeid(),\n      ...recipe.recipe\n    }));\n    console.warn(\"saga\", data);\n    yield put(recipeSuccess(data));\n  } catch (error) {\n    yield put(recipeError(error.message));\n  }\n}\nfunction* searchRecipe(data) {\n  try {\n    //yield put({ type: SET_LOADING, loading: true })\n    let result = yield fetch(`https://api.edamam.com/search?q=${data.query}${key}`);\n    console.log(\"querry\", data.query);\n    console.log(\"querry\", data);\n    result = yield result.json();\n    const recipeId = result.hits.map(recipe => ({\n      id: recipeid(),\n      ...recipe.recipe\n    }));\n    console.warn(\"sagarecipe\", result);\n    yield put(searchrecipeSuccess(recipeId));\n  } catch (error) {\n    yield put(searchrecipeError(error.message));\n  }\n}\nfunction* recipeSaga() {\n  yield take(ADD_RECIPE, getRecipe);\n  yield takeEvery(SEARCH_RECIPE, searchRecipe);\n}\nexport default recipeSaga;","map":{"version":3,"names":["put","takeEvery","ADD_RECIPE","SEARCH_RECIPE","nanoid","recipeError","recipeSuccess","searchrecipeError","searchrecipeSuccess","key","recipeid","console","log","getRecipe","data","fetch","json","hits","map","recipe","id","warn","error","message","searchRecipe","result","query","recipeId","recipeSaga","take"],"sources":["/home/rifluxyss/Documents/deva/REDUX-TASK-SAGA/recipe-finished/src/Redux/recipesaga.js"],"sourcesContent":["import { put, takeEvery } from 'redux-saga/effects'\nimport { ADD_RECIPE, SEARCH_RECIPE} from './Constants'\nimport { nanoid } from 'nanoid'\nimport { recipeError, recipeSuccess, searchrecipeError, searchrecipeSuccess } from './Action';\n\nconst key = \"&app_id=a5de3521&app_key=28f8a20bd893e2740e68d4bbb349b977&from=0&to=50\"\n//const rec=\"pizza\"\nconst recipeid = () => nanoid();\nconsole.log(\"recipe\", recipeid)\nfunction* getRecipe() {\n    try {\n        //yield put({ type: SET_LOADING, loading: true })\n        let data = yield fetch(`https://api.edamam.com/search?q=chicken${key}`)\n        // let data = yield fetch(\"http://localhost:4000/\")\n        data = yield data.json()\n        data = data.hits.map(recipe => ({\n            id: recipeid(),\n            ...recipe.recipe\n        }));\n        console.warn(\"saga\", data)\n        yield put(recipeSuccess(data))\n\n    }\n    catch (error) {\n        yield put(recipeError(error.message))\n    }\n}\n\nfunction* searchRecipe(data) {\n    try {\n        //yield put({ type: SET_LOADING, loading: true })\n        let result = yield fetch(`https://api.edamam.com/search?q=${data.query}${key}`)\n        console.log(\"querry\", data.query)\n        console.log(\"querry\", data)\n        result = yield result.json()\n        const recipeId = result.hits.map(recipe => ({\n            id: recipeid(),\n            ...recipe.recipe\n        }));\n        console.warn(\"sagarecipe\", result)\n        yield put(searchrecipeSuccess(recipeId))\n    }\n    catch (error) {\n        yield put(searchrecipeError(error.message))\n    }\n}\n\nfunction* recipeSaga() {\n    yield take(ADD_RECIPE, getRecipe)\n    yield takeEvery(SEARCH_RECIPE, searchRecipe)\n}\n\nexport default recipeSaga"],"mappings":"AAAA,SAASA,GAAG,EAAEC,SAAS,QAAQ,oBAAoB;AACnD,SAASC,UAAU,EAAEC,aAAa,QAAO,aAAa;AACtD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,WAAW,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,mBAAmB,QAAQ,UAAU;AAE7F,MAAMC,GAAG,GAAG,wEAAwE;AACpF;AACA,MAAMC,QAAQ,GAAGA,CAAA,KAAMN,MAAM,CAAC,CAAC;AAC/BO,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEF,QAAQ,CAAC;AAC/B,UAAUG,SAASA,CAAA,EAAG;EAClB,IAAI;IACA;IACA,IAAIC,IAAI,GAAG,MAAMC,KAAK,CAAE,0CAAyCN,GAAI,EAAC,CAAC;IACvE;IACAK,IAAI,GAAG,MAAMA,IAAI,CAACE,IAAI,CAAC,CAAC;IACxBF,IAAI,GAAGA,IAAI,CAACG,IAAI,CAACC,GAAG,CAACC,MAAM,KAAK;MAC5BC,EAAE,EAAEV,QAAQ,CAAC,CAAC;MACd,GAAGS,MAAM,CAACA;IACd,CAAC,CAAC,CAAC;IACHR,OAAO,CAACU,IAAI,CAAC,MAAM,EAAEP,IAAI,CAAC;IAC1B,MAAMd,GAAG,CAACM,aAAa,CAACQ,IAAI,CAAC,CAAC;EAElC,CAAC,CACD,OAAOQ,KAAK,EAAE;IACV,MAAMtB,GAAG,CAACK,WAAW,CAACiB,KAAK,CAACC,OAAO,CAAC,CAAC;EACzC;AACJ;AAEA,UAAUC,YAAYA,CAACV,IAAI,EAAE;EACzB,IAAI;IACA;IACA,IAAIW,MAAM,GAAG,MAAMV,KAAK,CAAE,mCAAkCD,IAAI,CAACY,KAAM,GAAEjB,GAAI,EAAC,CAAC;IAC/EE,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,IAAI,CAACY,KAAK,CAAC;IACjCf,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEE,IAAI,CAAC;IAC3BW,MAAM,GAAG,MAAMA,MAAM,CAACT,IAAI,CAAC,CAAC;IAC5B,MAAMW,QAAQ,GAAGF,MAAM,CAACR,IAAI,CAACC,GAAG,CAACC,MAAM,KAAK;MACxCC,EAAE,EAAEV,QAAQ,CAAC,CAAC;MACd,GAAGS,MAAM,CAACA;IACd,CAAC,CAAC,CAAC;IACHR,OAAO,CAACU,IAAI,CAAC,YAAY,EAAEI,MAAM,CAAC;IAClC,MAAMzB,GAAG,CAACQ,mBAAmB,CAACmB,QAAQ,CAAC,CAAC;EAC5C,CAAC,CACD,OAAOL,KAAK,EAAE;IACV,MAAMtB,GAAG,CAACO,iBAAiB,CAACe,KAAK,CAACC,OAAO,CAAC,CAAC;EAC/C;AACJ;AAEA,UAAUK,UAAUA,CAAA,EAAG;EACnB,MAAMC,IAAI,CAAC3B,UAAU,EAAEW,SAAS,CAAC;EACjC,MAAMZ,SAAS,CAACE,aAAa,EAAEqB,YAAY,CAAC;AAChD;AAEA,eAAeI,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}